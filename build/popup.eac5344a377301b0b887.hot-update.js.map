{"version":3,"file":"popup.eac5344a377301b0b887.hot-update.js","mappingsuBA","sources":["webpack://deploysentinel-recorder/./src/pages/builders/index.ts","webpack://deploysentinel-recorder/webpack/runtime/getFullHash"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nimport { getBestSelectorForAction } from './selector';\r\nimport { ActionType, BaseAction, ScriptType, TagName, isSupportedActionType, } from '../types';\r\nvar FILLABLE_INPUT_TYPES = [\r\n    '',\r\n    'date',\r\n    'datetime',\r\n    'datetime-local',\r\n    'email',\r\n    'month',\r\n    'number',\r\n    'password',\r\n    'search',\r\n    'tel',\r\n    'text',\r\n    'time',\r\n    'url',\r\n    'week',\r\n];\r\n// only used in ActionContext\r\nexport var truncateText = function (str, maxLen) {\r\n    return \"\" + str.substring(0, maxLen) + (str.length > maxLen ? '...' : '');\r\n};\r\nexport var isActionStateful = function (action) {\r\n    return action.tagName === TagName.TextArea;\r\n};\r\nvar ActionContext = /** @class */ (function (_super) {\r\n    __extends(ActionContext, _super);\r\n    function ActionContext(action, scriptType, actionState) {\r\n        var _this = _super.call(this) || this;\r\n        _this.action = action;\r\n        _this.actionState = actionState;\r\n        _this.scriptType = scriptType;\r\n        return _this;\r\n    }\r\n    ActionContext.prototype.getType = function () {\r\n        return this.action.type;\r\n    };\r\n    ActionContext.prototype.getTagName = function () {\r\n        return this.action.tagName;\r\n    };\r\n    ActionContext.prototype.getValue = function () {\r\n        return this.action.value;\r\n    };\r\n    ActionContext.prototype.getInputType = function () {\r\n        return this.action.inputType;\r\n    };\r\n    // (FIXME: shouldn't expose action)\r\n    ActionContext.prototype.getAction = function () {\r\n        return this.action;\r\n    };\r\n    ActionContext.prototype.getActionState = function () {\r\n        return this.actionState;\r\n    };\r\n    ActionContext.prototype.getDescription = function () {\r\n        var _a = this.action, type = _a.type, selectors = _a.selectors, tagName = _a.tagName, value = _a.value;\r\n        switch (type) {\r\n            case ActionType.Click:\r\n                return \"Click on <\" + tagName.toLowerCase() + \"> \" + (selectors.text != null && selectors.text.length > 0\r\n                    ? \"\\\"\" + truncateText(selectors.text.replace(/\\s/g, ' '), 25) + \"\\\"\"\r\n                    : getBestSelectorForAction(this.action, this.scriptType));\r\n            case ActionType.DblClick:\r\n                return \"DblClick on <\" + tagName.toLowerCase() + \"> \" + (selectors.text != null && selectors.text.length > 0\r\n                    ? \"\\\"\" + truncateText(selectors.text.replace(/\\s/g, ' '), 25) + \"\\\"\"\r\n                    : getBestSelectorForAction(this.action, this.scriptType));\r\n            case ActionType.Hover:\r\n                return \"Hover over <\" + tagName.toLowerCase() + \"> \" + (selectors.text != null && selectors.text.length > 0\r\n                    ? \"\\\"\" + truncateText(selectors.text.replace(/\\s/g, ' '), 25) + \"\\\"\"\r\n                    : getBestSelectorForAction(this.action, this.scriptType));\r\n            case ActionType.Move:\r\n                return \"Move to <\" + tagName.toLowerCase() + \"> \" + (selectors.text != null && selectors.text.length > 0\r\n                    ? \"\\\"\" + truncateText(selectors.text.replace(/\\s/g, ' '), 25) + \"\\\"\"\r\n                    : getBestSelectorForAction(this.action, this.scriptType));\r\n            case ActionType.Input:\r\n                return \"Fill \" + truncateText(JSON.stringify(value !== null && value !== void 0 ? value : ''), 16) + \" on <\" + tagName.toLowerCase() + \"> \" + getBestSelectorForAction(this.action, this.scriptType);\r\n            case ActionType.Keydown:\r\n                return \"Press \" + this.action.key + \" on \" + tagName.toLowerCase();\r\n            case ActionType.Load:\r\n                return \"Load \\\"\" + this.action.url + \"\\\"\";\r\n            case ActionType.Resize:\r\n                return \"Resize window to \" + this.action.width + \" x \" + this.action.height;\r\n            case ActionType.Wheel:\r\n                return \"Scroll wheel by X:\" + this.action.deltaX + \", Y:\" + this.action.deltaY;\r\n            case ActionType.FullScreenshot:\r\n                return \"Take full page screenshot\";\r\n            case ActionType.AwaitText:\r\n                return \"Wait for text \" + truncateText(JSON.stringify(this.action.text), 25) + \" to appear\";\r\n            case ActionType.DragAndDrop:\r\n                return \"Drag n drop \" + getBestSelectorForAction(this.action, this.scriptType) + \" from (\" + this.action.sourceX + \", \" + this.action.sourceY + \") to (\" + this.action.targetX + \", \" + this.action.targetY + \")\";\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n    ActionContext.prototype.getBestSelector = function () {\r\n        return getBestSelectorForAction(this.action, this.scriptType);\r\n    };\r\n    return ActionContext;\r\n}(BaseAction));\r\nexport { ActionContext };\r\nvar ScriptBuilder = /** @class */ (function () {\r\n    function ScriptBuilder(showComments) {\r\n        var _this = this;\r\n        this.transformActionIntoCodes = function (actionContext) {\r\n            var _a;\r\n            if (_this.showComments) {\r\n                var actionDescription = actionContext.getDescription();\r\n                _this.pushComments(\"// \" + actionDescription);\r\n            }\r\n            var bestSelector = actionContext.getBestSelector();\r\n            var tagName = actionContext.getTagName();\r\n            var value = actionContext.getValue();\r\n            var inputType = actionContext.getInputType();\r\n            var causesNavigation = actionContext.getActionState().causesNavigation;\r\n            // (FIXME: getters for special fields)\r\n            var action = actionContext.getAction();\r\n            switch (actionContext.getType()) {\r\n                case ActionType.DblClick:\r\n                    _this.dblclick(bestSelector, causesNavigation);\r\n                    break;\r\n                case ActionType.Click:\r\n                    _this.click(bestSelector, causesNavigation);\r\n                    break;\r\n                case ActionType.Hover:\r\n                    _this.hover(bestSelector, causesNavigation);\r\n                    break;\r\n                case ActionType.Move:\r\n                    _this.move(bestSelector, causesNavigation);\r\n                    break;\r\n                case ActionType.Keydown:\r\n                    _this.keydown(bestSelector, (_a = action.key) !== null && _a !== void 0 ? _a : '', causesNavigation);\r\n                    break;\r\n                case ActionType.Input: {\r\n                    if (tagName === TagName.Select) {\r\n                        _this.select(bestSelector, value !== null && value !== void 0 ? value : '', causesNavigation);\r\n                    }\r\n                    else if (\r\n                    // If the input is \"fillable\" or a text area\r\n                    tagName === TagName.Input &&\r\n                        inputType != null &&\r\n                        FILLABLE_INPUT_TYPES.includes(inputType)) {\r\n                        // Do more actionability checks\r\n                        _this.fill(bestSelector, value !== null && value !== void 0 ? value : '', causesNavigation);\r\n                    }\r\n                    else if (tagName === TagName.TextArea) {\r\n                        _this.fill(bestSelector, value !== null && value !== void 0 ? value : '', causesNavigation);\r\n                    }\r\n                    else {\r\n                        _this.type(bestSelector, value !== null && value !== void 0 ? value : '', causesNavigation);\r\n                    }\r\n                    break;\r\n                }\r\n                case ActionType.Load:\r\n                    _this.load(action.url);\r\n                    break;\r\n                case ActionType.Resize:\r\n                    _this.resize(action.width, action.height);\r\n                    break;\r\n                case ActionType.Wheel:\r\n                    _this.wheel(action.deltaX, action.deltaY, action.pageXOffset, action.pageYOffset);\r\n                    break;\r\n                case ActionType.FullScreenshot:\r\n                    _this.fullScreenshot();\r\n                    break;\r\n                case ActionType.AwaitText:\r\n                    _this.awaitText(action.text);\r\n                    break;\r\n                case ActionType.DragAndDrop:\r\n                    _this.dragAndDrop(action.sourceX, action.sourceY, action.targetX, action.targetY);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        this.pushComments = function (comments) {\r\n            _this.codes.push(\"\\n  \" + comments);\r\n            return _this;\r\n        };\r\n        this.pushCodes = function (codes) {\r\n            _this.codes.push(\"\\n  \" + codes + \"\\n\");\r\n            return _this;\r\n        };\r\n        this.pushActionContext = function (actionContext) {\r\n            _this.actionContexts.push(actionContext);\r\n        };\r\n        this.buildCodes = function () {\r\n            var e_1, _a;\r\n            var prevActionContext;\r\n            try {\r\n                for (var _b = __values(_this.actionContexts), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var actionContext = _c.value;\r\n                    if (!actionContext.getActionState().isStateful) {\r\n                        if (prevActionContext !== undefined &&\r\n                            prevActionContext.getActionState().isStateful) {\r\n                            _this.transformActionIntoCodes(prevActionContext);\r\n                        }\r\n                        _this.transformActionIntoCodes(actionContext);\r\n                    }\r\n                    prevActionContext = actionContext;\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            // edge case\r\n            if (prevActionContext !== undefined &&\r\n                prevActionContext.getActionState().isStateful) {\r\n                _this.transformActionIntoCodes(prevActionContext);\r\n            }\r\n            return _this;\r\n        };\r\n        // for test\r\n        this.getLatestCode = function () { return _this.codes[_this.codes.length - 1]; };\r\n        this.codes = [];\r\n        this.actionContexts = [];\r\n        this.showComments = showComments;\r\n    }\r\n    return ScriptBuilder;\r\n}());\r\nexport { ScriptBuilder };\r\nvar PlaywrightScriptBuilder = /** @class */ (function (_super) {\r\n    __extends(PlaywrightScriptBuilder, _super);\r\n    function PlaywrightScriptBuilder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.click = function (selector, causesNavigation) {\r\n            var actionStr = \"page.click('\" + selector + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.dblclick = function (selector, causesNavigation) {\r\n            var actionStr = \"page.dbclick('\" + selector + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.hover = function (selector, causesNavigation) {\r\n            var actionStr = \"page.hover('\" + selector + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.move = function (selector, causesNavigation) {\r\n            var actionStr = \"page.hover('\" + selector + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.load = function (url) {\r\n            _this.pushCodes(\"await page.goto('\" + url + \"');\");\r\n            return _this;\r\n        };\r\n        _this.resize = function (width, height) {\r\n            _this.pushCodes(\"await page.setViewportSize({ width: \" + width + \", height: \" + height + \" });\");\r\n            return _this;\r\n        };\r\n        _this.fill = function (selector, value, causesNavigation) {\r\n            var actionStr = \"page.fill('\" + selector + \"', \" + JSON.stringify(value) + \")\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.type = function (selector, value, causesNavigation) {\r\n            var actionStr = \"page.type('\" + selector + \"', \" + JSON.stringify(value) + \")\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.select = function (selector, option, causesNavigation) {\r\n            var actionStr = \"page.selectOption('\" + selector + \"', '\" + option + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.keydown = function (selector, key, causesNavigation) {\r\n            var actionStr = \"page.press('\" + selector + \"', '\" + key + \"')\";\r\n            var action = causesNavigation\r\n                ? _this.waitForActionAndNavigation(actionStr)\r\n                : \"await \" + actionStr + \";\";\r\n            _this.pushCodes(action);\r\n            return _this;\r\n        };\r\n        _this.wheel = function (deltaX, deltaY) {\r\n            _this.pushCodes(\"await page.mouse.wheel(\" + Math.floor(deltaX) + \", \" + Math.floor(deltaY) + \");\");\r\n            return _this;\r\n        };\r\n        _this.fullScreenshot = function () {\r\n            _this.pushCodes(\"await page.screenshot({ path: 'screenshot.png', fullPage: true });\");\r\n            return _this;\r\n        };\r\n        _this.awaitText = function (text) {\r\n            _this.pushCodes(\"await page.waitForSelector('text=\" + text + \"');\");\r\n            return _this;\r\n        };\r\n        _this.dragAndDrop = function (sourceX, sourceY, targetX, targetY) {\r\n            _this.pushCodes([\r\n                \"await page.mouse.move(\" + sourceX + \", \" + sourceY + \");\",\r\n                '  await page.mouse.down();',\r\n                \"  await page.mouse.move(\" + targetX + \", \" + targetY + \");\",\r\n                '  await page.mouse.up();',\r\n            ].join('\\n'));\r\n            return _this;\r\n        };\r\n        _this.buildScript = function () {\r\n            return \"import { test, expect } from '@playwright/test';\\n\\ntest('Written with DeploySentinel Recorder', async ({ page }) => {\" + _this.codes.join('') + \"});\";\r\n        };\r\n        return _this;\r\n    }\r\n    PlaywrightScriptBuilder.prototype.waitForNavigation = function () {\r\n        return \"page.waitForNavigation()\";\r\n    };\r\n    PlaywrightScriptBuilder.prototype.waitForActionAndNavigation = function (action) {\r\n        return \"await Promise.all([\\n    \" + action + \",\\n    \" + this.waitForNavigation() + \"\\n  ]);\";\r\n    };\r\n    return PlaywrightScriptBuilder;\r\n}(ScriptBuilder));\r\nexport { PlaywrightScriptBuilder };\r\nvar PuppeteerScriptBuilder = /** @class */ (function (_super) {\r\n    __extends(PuppeteerScriptBuilder, _super);\r\n    function PuppeteerScriptBuilder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.click = function (selector, causesNavigation) {\r\n            var pageClick = \"page.click('\" + selector + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageClick));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageClick + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.dblclick = function (selector, causesNavigation) {\r\n            var pageClick = \"page.dblclick('\" + selector + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageClick));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageClick + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.hover = function (selector, causesNavigation) {\r\n            var pageHover = \"page.hover('\" + selector + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageHover));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageHover + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.move = function (selector, causesNavigation) {\r\n            var pageHover = \"page.move('\" + selector + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageHover));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageHover + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.load = function (url) {\r\n            _this.pushCodes(\"await page.goto('\" + url + \"');\");\r\n            return _this;\r\n        };\r\n        _this.resize = function (width, height) {\r\n            _this.pushCodes(\"await page.setViewport({ width: \" + width + \", height: \" + height + \" });\");\r\n            return _this;\r\n        };\r\n        _this.type = function (selector, value, causesNavigation) {\r\n            var pageType = \"page.type('\" + selector + \"', \" + JSON.stringify(value) + \")\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageType));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageType + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        // Puppeteer doesn't support `fill` so we'll do our own actionability checks\r\n        // but still type\r\n        _this.fill = function (selector, value, causesNavigation) {\r\n            var pageType = \"page.type('\" + selector + \"', \" + JSON.stringify(value) + \")\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector + \":not([disabled])\", pageType));\r\n            }\r\n            else {\r\n                // Do more actionability checks\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector + \":not([disabled])\") + \";\\n  await \" + pageType + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.select = function (selector, option, causesNavigation) {\r\n            var pageSelectOption = \"page.select('\" + selector + \"', '\" + option + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pageSelectOption));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await \" + _this.waitForSelector(selector) + \";\\n  await \" + pageSelectOption + \";\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.keydown = function (selector, key, causesNavigation) {\r\n            var pagePress = \"page.keyboard.press('\" + key + \"')\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(_this.waitForSelectorAndNavigation(selector, pagePress));\r\n            }\r\n            else {\r\n                _this.pushCodes(\"await page.waitForSelector('\" + selector + \"');\\n  await page.keyboard.press('\" + key + \"');\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.wheel = function (deltaX, deltaY) {\r\n            _this.pushCodes(\"await page.evaluate(() => window.scrollBy(\" + deltaX + \", \" + deltaY + \"));\");\r\n            return _this;\r\n        };\r\n        _this.fullScreenshot = function () {\r\n            _this.pushCodes(\"await page.screenshot({ path: 'screenshot.png', fullPage: true });\");\r\n            return _this;\r\n        };\r\n        _this.awaitText = function (text) {\r\n            _this.pushCodes(\"await page.waitForFunction(\\\"document.body.innerText.includes('\" + text + \"')\\\");\");\r\n            return _this;\r\n        };\r\n        _this.dragAndDrop = function (sourceX, sourceY, targetX, targetY) {\r\n            _this.pushCodes([\r\n                \"await page.mouse.move(\" + sourceX + \", \" + sourceY + \");\",\r\n                '  await page.mouse.down();',\r\n                \"  await page.mouse.move(\" + targetX + \", \" + targetY + \");\",\r\n                '  await page.mouse.up();',\r\n            ].join('\\n'));\r\n            return _this;\r\n        };\r\n        _this.buildScript = function () {\r\n            return \"const puppeteer = require('puppeteer');\\n(async () => {\\n  const browser = await puppeteer.launch({\\n    // headless: false, slowMo: 100, // Uncomment to visualize test\\n  });\\n  const page = await browser.newPage();\\n\" + _this.codes.join('') + \"\\n  await browser.close();\\n})();\";\r\n        };\r\n        return _this;\r\n    }\r\n    PuppeteerScriptBuilder.prototype.waitForSelector = function (selector) {\r\n        return \"page.waitForSelector('\" + selector + \"')\";\r\n    };\r\n    PuppeteerScriptBuilder.prototype.waitForNavigation = function () {\r\n        return \"page.waitForNavigation()\";\r\n    };\r\n    PuppeteerScriptBuilder.prototype.waitForSelectorAndNavigation = function (selector, action) {\r\n        return \"await \" + this.waitForSelector(selector) + \";\\n  await Promise.all([\\n    \" + action + \",\\n    \" + this.waitForNavigation() + \"\\n  ]);\";\r\n    };\r\n    return PuppeteerScriptBuilder;\r\n}(ScriptBuilder));\r\nexport { PuppeteerScriptBuilder };\r\nvar GherkinScriptBuilder = /** @class */ (function (_super) {\r\n    __extends(GherkinScriptBuilder, _super);\r\n    function GherkinScriptBuilder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.featureHeader = \"\\n#language: es\\nCaracter\\u00EDstica: Titulo del Scenario\\n\\n  @untag\\n  Escenario: Nombre del Scenario - no voy hacer todo\";\r\n        _this.load = function (url) {\r\n            _this.pushCodes(\"Dado que estoy en la p\\u00E1gina '\" + url + \"'\");\r\n            return _this;\r\n        };\r\n        _this.click = function (selector, causesNavigation) {\r\n            var step = \"Y hago clic en el elemento '\" + selector + \"'\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.dblclick = function (selector, causesNavigation) {\r\n            var step = \"Y hago doble click en el elemento '\" + selector + \"'\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.type = function (selector, value, causesNavigation) {\r\n            var step;\r\n            if (value.includes(\"fakepath\")) {\r\n                value = value.replace(\"C:\", '').replace(\"fakepath\", '').replace(/\\\\/g, '');\r\n                step = \"Y adjunto el archivo '\" + value + \"' al elemento '\" + selector + \"'\";\r\n            }\r\n            else {\r\n                step = \"Y relleno el elemento '\" + selector + \"' con el valor '\" + value + \"'\";\r\n            }\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.resize = function (width, height) {\r\n            //this.pushCodes(`# Cambiar el tamaño de la ventana a ${width}x${height}\\nY cambio el tamaño de la ventana a ${width}x${height}`);\r\n            return _this;\r\n        };\r\n        _this.hover = function (selector, causesNavigation) {\r\n            var step = \"Y paso el cursor sobre el elemento '\" + selector + \"'\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.move = function (selector, causesNavigation) {\r\n            var step = \"Y desplazo la pagina al elemento 'WebElement'\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.fill = function (selector, value, causesNavigation) {\r\n            var step;\r\n            if (value.includes(\"fakepath\")) {\r\n                value = value.replace(\"C:\", '').replace(\"fakepath\", '').replace(/\\\\/g, '');\r\n                step = \"Y adjunto el archivo '\" + value + \"' al elemento '\" + selector + \"'\";\r\n            }\r\n            else {\r\n                step = \"Y relleno el elemento '\" + selector + \"' con el valor '\" + value + \"'\";\r\n            }\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.keydown = function (selector, key, causesNavigation) {\r\n            /*const step = `# Presionar la tecla '${key}' en el elemento '${selector}'\\nY presiono la tecla '${key}' en el elemento '${selector}'`;\r\n            if (causesNavigation) {\r\n              this.pushCodes(step);\r\n              this.pushCodes(this.waitForNavigation());\r\n            } else {\r\n              this.pushCodes(step);\r\n            }*/\r\n            return _this;\r\n        };\r\n        _this.select = function (selector, option, causesNavigation) {\r\n            var step = \"Y selecciono la opci\\u00F3n '\" + option + \"' en el elemento '\" + selector + \"'\";\r\n            if (causesNavigation) {\r\n                _this.pushCodes(step);\r\n                _this.pushCodes(_this.waitForNavigation());\r\n            }\r\n            else {\r\n                _this.pushCodes(step);\r\n            }\r\n            return _this;\r\n        };\r\n        _this.wheel = function (deltaX, deltaY) {\r\n            if (deltaY > 0) {\r\n                _this.pushCodes(\"Y desplazo la p\\u00E1gina '\" + Math.abs(deltaY) + \"' hacia abajo.\");\r\n            }\r\n            else if (deltaY < 0) {\r\n                _this.pushCodes(\"Y desplazo la p\\u00E1gina '\" + deltaY + \"' hacia arriba.\");\r\n            }\r\n            return _this;\r\n        };\r\n        _this.fullScreenshot = function () {\r\n            _this.pushCodes(\"Tomo una captura de pantalla de la p\\u00E1gina completa.\");\r\n            return _this;\r\n        };\r\n        _this.awaitText = function (text) {\r\n            _this.pushCodes(\"Espero que el texto '\" + text + \"' est\\u00E9 presente en la p\\u00E1gina.\");\r\n            return _this;\r\n        };\r\n        _this.dragAndDrop = function (sourceX, sourceY, targetX, targetY) {\r\n            _this.pushCodes(\"Arrastro el elemento desde (\" + sourceX + \", \" + sourceY + \") hasta (\" + targetX + \", \" + targetY + \")\");\r\n            return _this;\r\n        };\r\n        _this.buildScript = function () {\r\n            var formattedCodes = _this.codes\r\n                .filter(function (code) { return !code.trim().startsWith('//'); })\r\n                .map(function (code, index) {\r\n                return code;\r\n            })\r\n                .join('\\n');\r\n            var script = _this.featureHeader + \"\\n\" + formattedCodes;\r\n            return script;\r\n        };\r\n        return _this;\r\n    }\r\n    GherkinScriptBuilder.prototype.waitForSelector = function (selector) {\r\n        return \"Espero que el elemento con el selector '\" + selector + \"' est\\u00E9 visible.\";\r\n    };\r\n    GherkinScriptBuilder.prototype.waitForNavigation = function () {\r\n        //return `Espero que la página termine de cargar.`;\r\n        return \"\";\r\n    };\r\n    return GherkinScriptBuilder;\r\n}(ScriptBuilder));\r\nexport { GherkinScriptBuilder };\r\nvar CypressScriptBuilder = /** @class */ (function (_super) {\r\n    __extends(CypressScriptBuilder, _super);\r\n    function CypressScriptBuilder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        // Cypress automatically detects and waits for the page to finish loading\r\n        _this.click = function (selector, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').click();\");\r\n            return _this;\r\n        };\r\n        _this.dblclick = function (selector, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').dbclick();\");\r\n            return _this;\r\n        };\r\n        _this.hover = function (selector, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').trigger('mouseover');\");\r\n            return _this;\r\n        };\r\n        _this.move = function (selector, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').trigger('mouseover');\");\r\n            return _this;\r\n        };\r\n        _this.load = function (url) {\r\n            _this.pushCodes(\"cy.visit('\" + url + \"');\");\r\n            return _this;\r\n        };\r\n        _this.resize = function (width, height) {\r\n            _this.pushCodes(\"cy.viewport(\" + width + \", \" + height + \");\");\r\n            return _this;\r\n        };\r\n        _this.fill = function (selector, value, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').type(\" + JSON.stringify(value) + \");\");\r\n            return _this;\r\n        };\r\n        _this.type = function (selector, value, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').type(\" + JSON.stringify(value) + \");\");\r\n            return _this;\r\n        };\r\n        _this.select = function (selector, option, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').select('\" + option + \"');\");\r\n            return _this;\r\n        };\r\n        _this.keydown = function (selector, key, causesNavigation) {\r\n            _this.pushCodes(\"cy.get('\" + selector + \"').type('{\" + key + \"}');\");\r\n            return _this;\r\n        };\r\n        _this.wheel = function (deltaX, deltaY, pageXOffset, pageYOffset) {\r\n            _this.pushCodes(\"cy.scrollTo(\" + Math.floor(pageXOffset !== null && pageXOffset !== void 0 ? pageXOffset : 0) + \", \" + Math.floor(pageYOffset !== null && pageYOffset !== void 0 ? pageYOffset : 0) + \");\");\r\n            return _this;\r\n        };\r\n        _this.fullScreenshot = function () {\r\n            _this.pushCodes(\"cy.screenshot();\");\r\n            return _this;\r\n        };\r\n        _this.awaitText = function (text) {\r\n            _this.pushCodes(\"cy.contains('\" + text + \"');\");\r\n            return _this;\r\n        };\r\n        _this.dragAndDrop = function (sourceX, sourceY, targetX, targetY) {\r\n            // TODO -> IMPLEMENT ME\r\n            _this.pushCodes('');\r\n            return _this;\r\n        };\r\n        _this.buildScript = function () {\r\n            return \"it('Written with DeploySentinel Recorder', () => {\" + _this.codes.join('') + \"});\";\r\n        };\r\n        return _this;\r\n    }\r\n    return CypressScriptBuilder;\r\n}(ScriptBuilder));\r\nexport { CypressScriptBuilder };\r\nexport var genCode = function (actions, showComments, scriptType) {\r\n    var scriptBuilder;\r\n    switch (scriptType) {\r\n        case ScriptType.Playwright:\r\n            scriptBuilder = new PlaywrightScriptBuilder(showComments);\r\n            break;\r\n        case ScriptType.Puppeteer:\r\n            scriptBuilder = new PuppeteerScriptBuilder(showComments);\r\n            break;\r\n        case ScriptType.Cypress:\r\n            scriptBuilder = new CypressScriptBuilder(showComments);\r\n            break;\r\n        case ScriptType.Gherkin:\r\n            scriptBuilder = new GherkinScriptBuilder(showComments);\r\n            break;\r\n        default:\r\n            throw new Error('Unsupported script type');\r\n    }\r\n    for (var i = 0; i < actions.length; i++) {\r\n        var action = actions[i];\r\n        if (!isSupportedActionType(action.type)) {\r\n            continue;\r\n        }\r\n        var nextAction = actions[i + 1];\r\n        var causesNavigation = (nextAction === null || nextAction === void 0 ? void 0 : nextAction.type) === ActionType.Navigate;\r\n        scriptBuilder.pushActionContext(new ActionContext(action, scriptType, {\r\n            causesNavigation: causesNavigation,\r\n            isStateful: isActionStateful(action),\r\n        }));\r\n    }\r\n    return scriptBuilder.buildCodes().buildScript();\r\n};\r\n","__webpack_require__.h = () => (\"7eccd7df00c073cc466e\")"],"names":[],"sourceRoot":""}